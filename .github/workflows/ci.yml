name: Node.js CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Stage 1: Prepare Environment
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

  # Stage 2: Lint Code
  lint:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  # Stage 3: Build Project
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

  # Stage 4: Run Unit Tests
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  # Stage 5: Static Code Analysis
  measure:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Run SonarQube scan
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner

  # Stage 6: Generate Documentation
  document:
    runs-on: ubuntu-latest
    needs: measure
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Generate documentation
        run: npm run generate-docs

      - name: Upload documentation
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: docs

  # Stage 7: Security Audit
  secure:
    runs-on: ubuntu-latest
    needs: document
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Run security scan
        run: npm audit

  # Stage 8: Integration Tests
  integration-test:
    runs-on: ubuntu-latest
    needs: secure
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Run integration tests
        run: npm run integration-test

  # Stage 9: Deploy to Staging
  deploy-staging:
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to staging
        run: npm run deploy-staging

  # Stage 10: End-to-End Tests
  e2e-test:
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run end-to-end tests
        run: npm run e2e-test

  # Stage 11: Deploy to Production
  deploy:
    runs-on: ubuntu-latest
    needs: e2e-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to production
        run: npm run deploy

  # Stage 12: Deploy Documentation to GitHub Pages
  pages:
    runs-on: ubuntu-latest
    needs: document
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.ACTIONS_PAT }}
          publish_dir: ./docs
